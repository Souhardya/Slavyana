#pragma once

#define STATUS_SUCCESS					((NTSTATUS)0x00000000L)
#define STATUS_UNSUCCESSFUL				((NTSTATUS)0xC0000001L)
#define STATUS_ACCESS_DENIED			((NTSTATUS)0xC0000022L)
#define STATUS_NOT_IMPLEMENTED			((NTSTATUS)0xC0000002L)
#define STATUS_INVALID_INFO_CLASS		((NTSTATUS)0xC0000003L)
#define STATUS_INFO_LENGTH_MISMATCH		((NTSTATUS)0xC0000004L)
#define STATUS_OBJECT_NAME_NOT_FOUND	((NTSTATUS)0xC0000034L)
#define STATUS_OBJECT_PATH_NOT_FOUND	((NTSTATUS)0xC000003AL)
#define STATUS_NO_MORE_FILES			((NTSTATUS)0x80000006L)
#define STATUS_PORT_DISCONNECTED		((NTSTATUS)0xC0000037L)
#define STATUS_INVALID_PORT_ATTRIBUTES	((NTSTATUS)0xC000002EL)
#define STATUS_PORT_CONNECTION_REFUSED	((NTSTATUS)0xC0000041L)
#define STATUS_INVALID_PORT_HANDLE		((NTSTATUS)0xC0000042L)
#define STATUS_PORT_ALREADY_SET			((NTSTATUS)0xC0000048L)
#define STATUS_NOT_IMPLEMENTED			((NTSTATUS)0xC0000002L)

typedef ULONG THREADINFOCLASS;
typedef ULONG PROCESSINFOCLASS;
typedef ULONG_PTR KAFFINITY;
typedef ULONG KPRIORITY;
#define MEMORY_BASIC_INFORMATION_SIZE 28

typedef struct _CLIENT_ID {
    HANDLE UniqueProcess;
    HANDLE UniqueThread;
} CLIENT_ID;
typedef CLIENT_ID *PCLIENT_ID;

typedef struct _THREAD_BASIC_INFORMATION {
	NTSTATUS                ExitStatus;
	PVOID                   TebBaseAddress;
	CLIENT_ID               ClientId;
	KAFFINITY               AffinityMask;
	KPRIORITY               Priority;
	KPRIORITY               BasePriority;
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION;

typedef NTSTATUS (NTAPI * __pfnNtResumeThread)
(
	IN HANDLE               ThreadHandle,
	OUT PULONG              SuspendCount OPTIONAL );

extern __pfnNtResumeThread pfnNtResumeThread;

NTSTATUS
NTAPI
OnNtResumeThread(
	IN HANDLE               ThreadHandle,
	OUT PULONG              SuspendCount OPTIONAL );

NTSTATUS
NTAPI
NtResumeThread(
	IN HANDLE               ThreadHandle,
	OUT PULONG              SuspendCount OPTIONAL );